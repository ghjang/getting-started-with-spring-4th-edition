<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.example.daofactory"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <!--
            PropertyPlaceholderConfigurer는 프로퍼티 파일을 읽어와서
            ${...} 형태의 프로퍼티 플레이스 홀더를 실제 값으로 대체해주는 빈입니다.
            location 속성을 사용하여 프로퍼티 파일의 위치를 지정합니다.
            classpath: 접두사는 클래스패스에서 파일을 찾도록 지시합니다.
        -->
        <property name="location"
            value="classpath:application.properties"/>
    </bean>

    <!--
        AutowiredAnnotationBeanPostProcessor 등록합니다.
        이 빈을 등록하면 '.java' 파일에서 '@Value'를 통해서 프로퍼티 값을 주입할 수 있습니다.

        NOTE: 스프링 5.3.10 버전에서는 자동으로 아래와 같이 직접 등록하지 않아도 동작하는 것으로 보임.
    -->
    <!-- <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/> -->

    <bean id="daoFactory"
        class="com.example.daofactory.DaoFactory">
        <!--
            constructor-arg 태그는 생성자를 통해 값을 주입하는 데 사용됩니다.
            value 속성에 ${dao.type}과 같은 프로퍼티 플레이스 홀더를 사용하면,
            PropertyPlaceholderConfigurer가 프로퍼티 파일에서 dao.type에 해당하는 값을 읽어와서 주입합니다.
        -->
        <constructor-arg value="${dao.type}"/>
    </bean>

    <bean id="articleDao"
        factory-bean="daoFactory"
        factory-method="getArticleDao"/>

    <bean id="articleController"
        class="com.example.daofactory.ArticleController"/>

    <bean id="articleService"
        class="com.example.daofactory.ArticleService"/>
</beans>
